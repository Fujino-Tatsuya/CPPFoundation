#include <iostream>
using namespace std;

int main()
{
	int num = 0;

	/* (1) */ int& rNum = 100;
	/* (2) */ int&& rrNum = num;
	/* (3) */ int& rNum = num;
	/*     */ 
	/* (4) */ int* p = nullptr;
	/* (5) */ int*& pr = p;
	/* (6) */ int** pp = &p;


}

//L_value: 정적 객체
//R_value: 임시 객체

//&&연산자 (r_value 참조 연산자)
//동적 할당된 객체를 복사가 아닌 이동 시키기 위해 만들어진 연산자.ㅏㅏㅏㅏㅏ
//아직 이동에 대한 개념이 확립되진 않았으니 공부하자 은희야...

// 1. <T>& 는 정적 객체 참조 연산자이므로 컴파일 에러.
// 2. <T>&& 는 임시 객체 참조 연산자이므로 컴파일 에러.

// 6. 포인터는 특정 데이터타입의 주.소 를 담는 자료형.
// 6-1. 포인터 포인터는 포인터의 주소를 담아야 하니까 당연히 포인터 자료형의 주소를 넘기는게 맞잖아 은희야...