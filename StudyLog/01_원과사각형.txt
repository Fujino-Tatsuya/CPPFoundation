25.
04.09 09:00
개와 고양이 마무리 후 원과 사각형 그리기 시작

사용자 정의 함수(WN_PROC) 포인터를 가진 객체를 생성
윈도우에 등록 요청
커널에 있는 객체가 메세지를 받을 때 마다 함수 호출


왼쪽버튼 클릭시:
좌표 가져와서, g_GeoShapeManager의 Add.도형 함수 호출

BaseShape* mShapes[] = new 도형;
동적 할당한 객체를 가르키는 포인터를 배열에 저장

~09:50

04.10

지우기 지우기...
1. 클릭하면 x,y 값 얻을 수 있음
2. 도형도 중점이 있으니까 두 x,y 값의 최소 거리 설정 해두고
3. 체크 함수 만들어서
4. true면 해당 도형 객체를 지우면 되려나?
// 클릭 이벤트 발생시 해당 위치의 객체를 얻어오는 방법은 없을까?

4.10 09:35
드디어 코드 소화 완료
전에 이해한 내용과 동일하지만 좀 더 WIN api 랑 친해졌달까..

좌클릭 -> 좌표 대입 및  g_GeoShapeManager.AddCircle() 호출

m_shapes[] 배열에 Circle 객체 할당

InvalidateRect 호출시 WM_PAINT 메세지 전달

g_GeoShapeManager.Draw(hdc) 호출

 void Draw(HDC hdc) //
 {
     for (int i = 0; i < MAX_SHAPES; ++i)
     {
         if (m_shapes[i] == nullptr) break;

         m_shapes[i]->Draw(hdc);
     }
 }

배열 요소를 순회하며 요소의 Draw 호출


1. 유니티 처럼 무슨 오브젝트가 화면에 존재하는게 아니라 배열에 데이터로 존재함
2. BaseShape* [] 에 업캐스팅 되어 저장되어 있으니 다운캐스팅 해서 좌표 값 가져와서 연산하면 될듯
3. 일단 좌클릭하면 배열 내부 요소를 nullptr로 만드는 것 부터 해볼까 ?

extern ?
cpp에는 네임스페이스 내부에 GSM 인스턴스
헤더에 extern 인스턴스

extern! 동일한 프로젝트에 선언된 지역변수 + 헤더에 선언된 extern을 통해
링커에게 노출시켜 서로 다른 .cpp 임에도 연결 가넝


4.11 15:00
클릭하면 마우스 위치 값 알수 있고
m_shapes의 모든 객체를 다운캐스팅 해서 xy값 가져오고 대조해서 가장 작은 값을 지운다 !

일단 클릭하면 순서대로 치우는거 먼저 해보자